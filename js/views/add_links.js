// Generated by CoffeeScript 1.3.3

define(["jquery", "underscore", "backbone", "syphon", "mediator", "models/link", "models/tag", "collections/links", "text!templates/add/add_links.hbs"], function($, _, Backbone, Syphon, mediator, LinkModel, TagModel, linksCollection, addLinksTemplate) {
  var AddLinksView;
  AddLinksView = Backbone.View.extend({
    events: {
      "submit form": "updateLinks"
    },
    initialize: function() {
      console.debug('AddLinksView:initialize');
      linksCollection.fetch();
      return linksCollection.bind('add', this.renderLinksCollection);
    },
    exampleBind: function(model) {},
    render: function() {
      var compiledTemplate, data;
      data = {
        collections: linksCollection.models,
        _: _
      };
      compiledTemplate = _.template(addLinksTemplate, data);
      return $("#add_links").html(compiledTemplate);
    },
    updateLinks: function(e) {
      var data;
      e.preventDefault();
      data = Syphon.serialize(this);
      return this.updateCollections(data);
    },
    updateCollections: function(data) {
      var link;
      link = this.updateModels(data);
      linksCollection.add(link);
      return link.save();
    },
    updateModels: function(data) {
      var link, t, tag_list, tags, _i, _len, _ref;
      tag_list = data.tags.split(",");
      _ref = data.tags;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        t = _ref[_i];
        tags = new TagModel({
          name: t.name
        });
      }
      link = new LinkModel({
        name: data.name,
        url: data.url,
        tags: tag_list
      });
      link.on("error", this.showError, this);
      return link;
    },
    renderLinksCollection: function(collection) {
      console.debug("AddLinksView:renderLinksCollection");
      return mediator.trigger('add:links_collection', collection);
    },
    showError: function(model, error) {
      return console.debug("AddLinksView:showError -> " + error);
    }
  });
  return new AddLinksView({
    el: $("#add_links")
  });
});
