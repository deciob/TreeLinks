// Generated by CoffeeScript 1.3.3

define(["jquery", "underscore", "handlebars", "backbone", "syphon", "mediator", "models/link", "models/tag", "collections/tags", "text!templates/render/render_tags.hbs"], function($, _, Handlebars, Backbone, Syphon, mediator, LinkModel, TagModel, TagsCollection, renderTagsTemplate) {
  var RenderTagsView, tagsCollection;
  tagsCollection = new TagsCollection();
  RenderTagsView = Backbone.View.extend({
    initialize: function() {
      this.collection.fetch({
        success: this.renderInit
      });
      this.collection.bind('add', this.render, this);
      return mediator.on('add:tags_collection', this.add, this);
    },
    add: function(tag_list) {
      var name, tag, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = tag_list.length; _i < _len; _i++) {
        name = tag_list[_i];
        tag = new TagModel({
          name: name
        });
        this.collection.add(tag);
        if (tag.isValid()) {
          _results.push(tag.save());
        } else {
          _results.push(this.showError(tag, "This tag is not valid!"));
        }
      }
      return _results;
    },
    renderInit: function(model, response) {
      var data, template;
      data = {
        tags: response
      };
      template = Handlebars.compile(renderTagsTemplate);
      return $("#tags-collections").html(template(data));
    },
    render: function() {
      var data, tags, template;
      tags = this.collection.toJSON();
      data = {
        tags: tags
      };
      template = Handlebars.compile(renderTagsTemplate);
      return $("#tags-collections").html(template(data));
    },
    showError: function(model, error) {
      return console.debug("RenderTagsView:showError -> " + error);
    }
  });
  return new RenderTagsView({
    el: $("tags-collections"),
    collection: tagsCollection
  });
});
